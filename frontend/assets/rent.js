document.addEventListener("DOMContentLoaded", async function () {
    const waterList = document.getElementById("water-list");
    const filters = document.querySelectorAll(".filter");
    const pagination = document.querySelector(".pagination");

    let waterData = [];
    let roomData = {}; // ‡πÄ‡∏Å‡πá‡∏ö Room_ID ‡∏ï‡∏≤‡∏° Tenant_ID
    let currentPage = 1;
    const rowsPerPage = 10;

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
    async function fetchRooms() {
        try {
            const response = await fetch("http://localhost:3000/api/v1/tenants");
            const tenants = await response.json();
            console.log("üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤:", tenants);

            tenants.forEach(tenant => {
                roomData[tenant.Tenant_ID] = tenant.Room_ID || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
            });

            console.log("üìå roomData:", roomData);
        } catch (error) {
            console.error("‚ùå Error fetching room data:", error);
        }
    }

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥
    async function fetchWaterData(filter = "all") {
        try {
            await fetchRooms(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô

            const response = await fetch("http://localhost:3000/api/v1/bills/rent");
            let data = await response.json();
            console.log("üíß ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤:", data);

            // üîπ ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            waterData = data.filter(entry => {
                if (filter === "unpaid") return entry.status === "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞";
                if (filter === "paid") return entry.status === "‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß";
                if (filter === "due") return entry.status === "‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß";
                return true;
            });

            currentPage = 1;
            displayWater();
            setupPagination();
        } catch (error) {
            console.error("‚ùå Error fetching water data:", error);
        }
    }

    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    function displayWater() {
        waterList.innerHTML = "";
        const start = (currentPage - 1) * rowsPerPage;
        const end = start + rowsPerPage;
        const paginatedData = waterData.slice(start, end);

        paginatedData.forEach(entry => {
            const roomNumber = roomData[entry.tenant_id] || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
            const isPaid = entry.status === "‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß";

            console.log(`üìå Tenant ${entry.tenant_id}: ‡∏´‡πâ‡∏≠‡∏á ${roomNumber}`);

            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${roomNumber}</td>
                <td>${entry.price || "-"}</td>
                <td class="status ${isPaid ? "paid" : entry.status === "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞" ? "unpaid" : "due"}">
                    ${entry.status}
                </td>
                <td>
                    <button class="check-btn ${isPaid ? "approved" : "warning"}" 
                        data-room="${roomNumber}" 
                        data-proof="${entry.proof_of_payment}">
                        ${isPaid ? "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö" : "‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô"}
                    </button>
                </td>
            `;

            waterList.appendChild(row);
        });

        setupCheckButtons();
    }

    // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤
    function setupPagination() {
        pagination.innerHTML = "";
        const pageCount = Math.ceil(waterData.length / rowsPerPage);

        if (currentPage > 1) {
            pagination.innerHTML += `<span class="page prev">‚óÄ</span>`;
        }

        for (let i = 1; i <= pageCount; i++) {
            pagination.innerHTML += `<span class="page ${i === currentPage ? "active" : ""}">${i}</span>`;
        }

        if (currentPage < pageCount) {
            pagination.innerHTML += `<span class="page next">‚ñ∂</span>`;
        }

        document.querySelectorAll(".page").forEach(page => {
            page.addEventListener("click", function () {
                if (this.classList.contains("prev")) {
                    currentPage--;
                } else if (this.classList.contains("next")) {
                    currentPage++;
                } else {
                    currentPage = parseInt(this.innerText);
                }
                displayWater();
                setupPagination();
            });
        });
    }

    // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö & ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    function setupCheckButtons() {
        document.querySelectorAll(".check-btn").forEach(button => {
            button.addEventListener("click", function () {
                const roomNumber = this.dataset.room;
                const proofLink = this.dataset.proof;
    
                if (this.innerText === "‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô") {
                    alert(`üì¢ ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡πâ‡∏≠‡∏á ${roomNumber} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
                } else {
                    // ‚úÖ ‡∏™‡πà‡∏á room_id ‡πÅ‡∏•‡∏∞ proof_of_payment ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ payment-proof.html
                    window.location.href = `payment-proof.html?room=${roomNumber}&proof=${encodeURIComponent(proofLink)}`;
                }
            });
        });
    }

    // ‚úÖ ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    filters.forEach(filter => {
        filter.addEventListener("click", function () {
            filters.forEach(btn => btn.classList.remove("active"));
            this.classList.add("active");
            fetchWaterData(this.dataset.filter);
        });
    });

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
    fetchWaterData();
});
